spring.application.name=customer-app
server.port=8090
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true


spring.security.oauth2.client.registration.google.clientId=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_USER_NAME_ATTRIBUTE}

spring.security.oauth2.client.registration.github.clientId=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.provider.github.user-name-attribute=${GITHUB_USER_NAME_ATTRIBUTE}

spring.security.oauth2.client.registration.keycloak.client-name=${KEYCLOAK_CLIENT_NAME}
spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.scope=${KEYCLOAK_SCOPE}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=${KEYCLOAK_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI}

spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_TOKEN_URI}


spring.security.oauth2.client.provider.keycloak.user-name-attribute=${KEYCLOAK_USER_NAME_ATTRIBUTE}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/ebank-realm